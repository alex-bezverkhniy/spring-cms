buildscript {
    repositories {
        maven { url "http://repo.spring.io/libs-release" }
        mavenLocal()
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.1.4.RELEASE")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'war'
apply plugin: 'spring-boot'

jar {
    baseName = 'spring-cms'
    version = '0.1.0'
}

repositories {
    mavenLocal()
    mavenCentral()
    maven { url "http://repo.spring.io/libs-release" }
}

dependencies {
    // Spring.IO
    versionManagement 'io.spring.platform:platform-versions:1.0.1.RELEASE@properties'

    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.boot:spring-boot-starter-actuator")
    compile("org.springframework.boot:spring-boot-starter-data-rest")
    compile("org.springframework.boot:spring-boot-starter-data-jpa")
    compile("org.springframework.boot:spring-boot-starter-tomcat")
    compile("org.springframework.boot:spring-boot-starter-logging")
    compile("org.springframework.boot:spring-boot-starter-thymeleaf")
    compile("org.springframework.boot:spring-boot-starter-security")

    //compile("org.apache.tomcat.embed:tomcat-embed-jasper")
    //compile("javax.servlet:jstl")

    compile("org.atteo:evo-inflector:1.2")

    compile("com.h2database:h2")

    // Logging
    compile 'ch.qos.logback:logback-classic'
    compile 'org.slf4j:slf4j-api'

    // Spring test
    testCompile("org.springframework:spring-test")
    testCompile("org.springframework.boot:spring-boot-starter-test")

    // jUnit
    testCompile("junit:junit")

}

task wrapper(type: Wrapper) {
    gradleVersion = '1.8'
}